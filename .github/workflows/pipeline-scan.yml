# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Pipeline Scan for PHP/Javascript

on:
  push:
    branches:
      - '*'
      - '!master'

# jobs:
#   build:

#     runs-on: ubuntu-latest

#     steps:
#     - uses: actions/checkout@v2
#     - name: Set up JDK 1.8
#       uses: actions/setup-java@v1
#       with:
#         java-version: 1.8
#     - name: Build with Maven
#       run: mvn -B package --file pom.xml
    
#     - uses: actions/upload-artifact@v2 # Copy files from repository to docker container so the next uploadandscan action can access them.
#       with:
#         path: target/*.war # Wildcards can be used to filter the files copied into the container. See: https://github.com/actions/upload-artifact
    
#         # download the Veracode Static Analysis Pipeline scan jar
#     - uses: wei/curl@master
#       with:
#         args: -O https://downloads.veracode.com/securityscan/pipeline-scan-LATEST.zip
#     - run: unzip -o pipeline-scan-LATEST.zip
    
#     - uses: actions/setup-java@v1
#       with:
#         java-version: 1.8
#     - run: java -jar pipeline-scan.jar --veracode_api_id "${{secrets.VERACODE_API_ID}}" --veracode_api_key "${{secrets.VERACODE_API_KEY}}" --fail_on_severity="Very High, High" --file "target/verademo.war"
#       continue-on-error: true
    
#     - uses: actions/upload-artifact@v1
#       with:
#         name: ScanResults
#         path: results.json
#     - name: Convert pipeline scan output to SARIF format 
#       id: convert
#       uses: veracode/veracode-pipeline-scan-results-to-sarif@master
#       with:
#         pipeline-results-json: results.json
#     - uses: github/codeql-action/upload-sarif@v1
#       with:
#         # Path to SARIF file relative to the root of the repository
#         sarif_file: veracode-results.sarif
